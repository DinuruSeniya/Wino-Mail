name: "CodeQL Advanced"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '45 1 * * 1'

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ${{ 'windows-latest' }}
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
        - language: csharp
          build-mode: manual
        - language: javascript-typescript
          build-mode: none

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install MSBuild and required workloads for Windows builds
      - name: Setup MSBuild
        if: matrix.language == 'csharp'
        uses: microsoft/setup-msbuild@v2

      # Initialize CodeQL
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          build-mode: ${{ matrix.build-mode }}

      # Manual build for C#
      - if: matrix.build-mode == 'manual'
        name: Build solution
        shell: pwsh
        run: |
          dotnet restore WinoMail.slnx
          msbuild WinoMail.slnx `
            /p:Configuration=Release `
            /p:Platform=AnyCPU `
            /p:StartupProject=WinoMail.packaging `
            /p:GenerateTemporaryStoreCertificate=false `
            /p:AppxBundle=Always `
            /p:UapAppxPackageBuildMode=StoreUpload `
            /p:IncludeAppxSymbols=false

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"
