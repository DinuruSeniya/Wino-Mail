name: "CodeQL Advanced"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '45 1 * * 1'

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ${{ 'windows-2022' }}
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
        - language: csharp
          build-mode: manual
        - language: javascript-typescript
          build-mode: none

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install MSBuild and required workloads for Windows builds
      - name: Setup MSBuild
        if: matrix.language == 'csharp'
        uses: microsoft/setup-msbuild@v2

      # Initialize CodeQL
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          build-mode: ${{ matrix.build-mode }}

      - name: Enable long paths
        shell: pwsh
        run: |
          New-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\FileSystem" `
          -Name "LongPathsEnabled" -Value 1 -PropertyType DWORD -Force

      - name: Install Windows workloads
        run: |
          choco install visualstudio2022-workload-uwpbuildtools --no-progress --yes
          choco install visualstudio2022-workload-manageddesktopbuildtools --no-progress --yes

      # Step 1: Warm up obj folder structure
      - name: Warm up generator output dirs
        shell: pwsh
        run: |
          # Build only up to CoreCompile to trigger source generator folder creation
          msbuild WinoMail.slnx /t:CoreCompile /p:Configuration=Release /p:Platform=x64 /m:1 /p:AppxPackage=false
      
          # Save the generated folder structure to a temp file
          $genDirs = Get-ChildItem -Recurse -Directory -Filter generated
          $allPaths = @()
          foreach ($gen in $genDirs) {
            $subDirs = Get-ChildItem -Recurse -Directory -Path $gen.FullName
            $allPaths += $gen.FullName
            $allPaths += $subDirs.FullName
          }
          $allPaths | Set-Content "$env:RUNNER_TEMP/generated_paths.txt"

      # Step 2: Re-create the structure before CodeQL build
      - name: Pre-create generator output dirs
        shell: pwsh
        run: |
          $paths = Get-Content "$env:RUNNER_TEMP/generated_paths.txt"
          foreach ($p in $paths) {
            if (-not (Test-Path $p)) {
              New-Item -ItemType Directory -Path $p -Force | Out-Null
            }
          }

      # Step 3: Actual build under CodeQL
      - if: matrix.build-mode == 'manual'
        name: Build solution
        shell: pwsh
        run: |
          dotnet restore WinoMail.slnx
          msbuild WinoMail.slnx `
            /p:Configuration=Release `
            /p:Platform=x64 `
            /p:AppxPackage=false

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"
